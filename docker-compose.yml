version: '3.8'
services:
  eureka-server:
    build: eureka-server
    image: eureka-server-image
    container_name: eureka-server-container
    networks:
      - restaurant-network
    restart: always
    ports:
      - "8761:8761"

  api-gateway:
    build: api-gateway
    image: api-gateway-image
    container_name: api-gateway-container
    networks:
      - restaurant-network
    restart: always
    depends_on:
      - eureka-server
    ports:
      - "8765:8765"
    environment:
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'

  order-service:
    build: order-service
    image: order-service-image
    container_name: order-service-container
    networks:
      - restaurant-network
    restart: always
    depends_on:
      - order-db
      - api-gateway
    #ports:
    #  - "9090:9090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-db:5432/order_db
      SPRING_DATASOURCE_USERNAME: order
      SPRING_DATASOURCE_PASSWORD: order
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'

  order-db:
    image: postgres:14.4-alpine
    container_name: order-db-container
    networks:
      - restaurant-network
    restart: always
    volumes:
      - order-db:/var/lib/postgresql/data
    ports:
      - "6542:5432"
    environment:
      - POSTGRES_DB=order_db
      - POSTGRES_USER=order
      - POSTGRES_PASSWORD=order

volumes:
  order-db:

networks:
  restaurant-network:
    name: restaurant-network
    driver: bridge